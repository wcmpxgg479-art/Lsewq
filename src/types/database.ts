// This file simulates the types generated by Supabase CLI for the 'public' schema.

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      counterparties: {
        Row: {
          code: string | null
          contact_info: string | null
          created_at: string
          id: string
          name: string
          user_id: string
          // New fields added by migration
          inn: string | null
          kpp: string | null
          address: string | null
          contact_person: string | null
          phone: string | null
          email: string | null
          description: string | null
          is_active: boolean
          updated_at: string
        }
        Insert: {
          code?: string | null
          contact_info?: string | null
          created_at?: string
          id?: string
          name: string
          user_id?: string
          // New fields added by migration
          inn?: string | null
          kpp?: string | null
          address?: string | null
          contact_person?: string | null
          phone?: string | null
          email?: string | null
          description?: string | null
          is_active?: boolean
          updated_at?: string
        }
        Update: {
          code?: string | null
          contact_info?: string | null
          created_at?: string
          id?: string
          name?: string
          user_id?: string
          // New fields added by migration
          inn?: string | null
          kpp?: string | null
          address?: string | null
          contact_person?: string | null
          phone?: string | null
          email?: string | null
          description?: string | null
          is_active?: boolean
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "counterparties_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      motors: {
        Row: {
          created_at: string
          id: string
          user_id: string
          name: string
          power_kw: number
          rpm: number
          voltage: number | null
          manufacturer: string | null
          price_per_unit: number
          current: number | null
          efficiency: number | null
          description: string | null
          is_active: boolean | null
          updated_at: string | null
          text: string | null
        }
        Insert: {
          created_at?: string
          id?: string
          user_id?: string
          name: string
          power_kw?: number
          rpm?: number
          voltage?: number | null
          manufacturer?: string | null
          price_per_unit?: number
          current?: number | null
          efficiency?: number | null
          description?: string | null
          is_active?: boolean | null
          updated_at?: string | null
          text?: string | null
        }
        Update: {
          created_at?: string
          id?: string
          user_id?: string
          name?: string
          power_kw?: number
          rpm?: number
          voltage?: number | null
          manufacturer?: string | null
          price_per_unit?: number
          current?: number | null
          efficiency?: number | null
          description?: string | null
          is_active?: boolean | null
          updated_at?: string | null
          text?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "motors_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      repair_orders: {
        Row: {
          allocated_document_id: string | null
          counterparty_id: string
          created_at: string
          description: string | null
          id: string
          motor_id: string | null // Changed
          qr_code_data: string
          status: string
          subdivision_id: string | null // Changed
          user_id: string
        }
        Insert: {
          allocated_document_id?: string | null
          counterparty_id: string
          created_at?: string
          description?: string | null
          id?: string
          motor_id?: string | null // Changed
          qr_code_data: string
          status?: string
          subdivision_id?: string | null // Changed
          user_id?: string
        }
        Update: {
          allocated_document_id?: string | null
          counterparty_id?: string
          created_at?: string
          description?: string | null
          id?: string
          motor_id?: string | null // Changed
          qr_code_data?: string
          status?: string
          subdivision_id?: string | null // Changed
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "fk_allocated_document"
            columns: ["allocated_document_id"]
            isOneToOne: false
            referencedRelation: "upd_documents"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "repair_orders_counterparty_id_fkey"
            columns: ["counterparty_id"]
            isOneToOne: false
            referencedRelation: "counterparties"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "repair_orders_motor_id_fkey"
            columns: ["motor_id"]
            isOneToOne: false
            referencedRelation: "motors"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "repair_orders_subdivision_id_fkey"
            columns: ["subdivision_id"]
            isOneToOne: false
            referencedRelation: "subdivisions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "repair_orders_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      subdivisions: {
        Row: {
          code: string | null
          created_at: string
          description: string | null
          id: string
          name: string
          user_id: string
          is_active: boolean // Added
        }
        Insert: {
          code?: string | null
          created_at?: string
          description?: string | null
          id?: string
          name: string
          user_id?: string
          is_active?: boolean // Added
        }
        Update: {
          code?: string | null
          created_at?: string
          description?: string | null
          id?: string
          name?: string
          user_id?: string
          is_active?: boolean // Added
        }
        Relationships: [
          {
            foreignKeyName: "subdivisions_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      upd_document_items: {
        Row: {
          created_at: string
          description: string
          document_id: string
          id: string
          is_income: boolean | null
          item_type: string
          level: number
          motor_id: string | null
          order_index: number
          original_order_id: string | null
          parent_id: string | null
          price: number | null
          quantity: number | null
        }
        Insert: {
          created_at?: string
          description: string
          document_id: string
          id?: string
          is_income?: boolean | null
          item_type: string
          level: number
          motor_id?: string | null
          order_index?: number
          original_order_id?: string | null
          parent_id?: string | null
          price?: number | null
          quantity?: number | null
        }
        Update: {
          created_at?: string
          description?: string
          document_id?: string
          id?: string
          is_income?: boolean | null
          item_type?: string
          level?: number
          motor_id?: string | null
          order_index?: number
          original_order_id?: string | null
          parent_id?: string | null
          price?: number | null
          quantity?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "upd_document_items_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "upd_documents"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "upd_document_items_motor_id_fkey"
            columns: ["motor_id"]
            isOneToOne: false
            referencedRelation: "motors"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "upd_document_items_original_order_id_fkey"
            columns: ["original_order_id"]
            isOneToOne: false
            referencedRelation: "repair_orders"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "upd_document_items_parent_id_fkey"
            columns: ["parent_id"]
            isOneToOne: false
            referencedRelation: "upd_document_items"
            referencedColumns: ["id"]
          },
        ]
      }
      upd_documents: {
        Row: {
          counterparty_id: string
          created_at: string
          document_date: string | null
          document_number: string
          id: string
          status: string
          total_expense: number | null
          total_income: number | null
          user_id: string
          subdivision_id: string | null // Added
        }
        Insert: {
          counterparty_id: string
          created_at?: string
          document_date?: string | null
          document_number?: string
          id?: string
          status?: string
          total_expense?: number | null
          total_income?: number | null
          user_id?: string
          subdivision_id?: string | null // Added
        }
        Update: {
          counterparty_id?: string
          created_at?: string
          document_date?: string | null
          document_number?: string
          id?: string
          status?: string
          total_expense?: number | null
          total_income?: number | null
          user_id?: string
          subdivision_id?: string | null // Added
        }
        Relationships: [
          {
            foreignKeyName: "upd_documents_counterparty_id_fkey"
            columns: ["counterparty_id"]
            isOneToOne: false
            referencedRelation: "counterparties"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "upd_documents_subdivision_id_fkey" // Added
            columns: ["subdivision_id"]
            isOneToOne: false
            referencedRelation: "subdivisions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "upd_documents_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      receptions: {
        Row: {
          id: string
          reception_date: string
          reception_number: string | null
          counterparty_id: string
          user_id: string
          created_at: string
        }
        Insert: {
          id?: string
          reception_date: string
          reception_number?: string | null
          counterparty_id: string
          user_id?: string
          created_at?: string
        }
        Update: {
          id?: string
          reception_date?: string
          reception_number?: string | null
          counterparty_id?: string
          user_id?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "receptions_counterparty_id_fkey"
            columns: ["counterparty_id"]
            isOneToOne: false
            referencedRelation: "counterparties"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "receptions_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      accepted_motors: {
        Row: {
          id: string
          reception_id: string
          subdivision_id: string | null
          position_in_reception: number
          motor_service_description: string
          motor_inventory_number: string | null // Added
          user_id: string
          created_at: string
        }
        Insert: {
          id?: string
          reception_id: string
          subdivision_id?: string | null
          position_in_reception: number
          motor_service_description: string
          motor_inventory_number?: string | null // Added
          user_id?: string
          created_at?: string
        }
        Update: {
          id?: string
          reception_id?: string
          subdivision_id?: string | null
          position_in_reception?: number
          motor_service_description?: string
          motor_inventory_number?: string | null // Added
          user_id?: string
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "accepted_motors_reception_id_fkey"
            columns: ["reception_id"]
            isOneToOne: false
            referencedRelation: "receptions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "accepted_motors_subdivision_id_fkey"
            columns: ["subdivision_id"]
            isOneToOne: false
            referencedRelation: "subdivisions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "accepted_motors_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      reception_items: {
        Row: {
          id: string
          accepted_motor_id: string
          item_description: string
          work_group: string | null
          quantity: number
          price: number
          upd_document_id: string | null
          user_id: string
          created_at: string
          transaction_type: string | null
        }
        Insert: {
          id?: string
          accepted_motor_id: string
          item_description: string
          work_group?: string | null
          quantity?: number
          price?: number
          upd_document_id?: string | null
          user_id?: string
          created_at?: string
          transaction_type?: string | null
        }
        Update: {
          id?: string
          accepted_motor_id?: string
          item_description?: string
          work_group?: string | null
          quantity?: number
          price?: number
          upd_document_id?: string | null
          user_id?: string
          created_at?: string
          transaction_type?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "reception_items_accepted_motor_id_fkey"
            columns: ["accepted_motor_id"]
            isOneToOne: false
            referencedRelation: "accepted_motors"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "reception_items_upd_document_id_fkey"
            columns: ["upd_document_id"]
            isOneToOne: false
            referencedRelation: "upd_documents"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "reception_items_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      reference_types: {
        Row: {
          id: string
          name: string
          type_key: string
          icon_name: string
          route: string
          is_active: boolean
          user_id: string
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          name: string
          type_key: string
          icon_name?: string
          route: string
          is_active?: boolean
          user_id?: string
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          name?: string
          type_key?: string
          icon_name?: string
          route?: string
          is_active?: boolean
          user_id?: string
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "reference_types_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      check_document_owner: {
        Args: {
          item_id: string
        }
        Returns: string
      }
      handle_updated_at: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      update_updated_at_column: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

export type Tables<
  T extends keyof Database['public']['Tables']
> = Database['public']['Tables'][T]['Row']
export type Enums<
  T extends keyof Database['public']['Enums']
> = Database['public']['Enums'][T]

export type Counterparty = Tables<'counterparties'>
export type Motor = Tables<'motors'>
export type Subdivision = Tables<'subdivisions'>
export type RepairOrder = Tables<'repair_orders'>
export type UPDDocument = Tables<'upd_documents'>
export type UPDDocumentItem = Tables<'upd_document_items'>
export type Reception = Tables<'receptions'>
export type AcceptedMotor = Tables<'accepted_motors'>
export type ReceptionItem = Tables<'reception_items'>
export type ReferenceType = Tables<'reference_types'>
